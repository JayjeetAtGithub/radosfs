Rados Filesystem - A filesystem library based in librados
==========================================================

This library offers a simple interface for file operations on top of a Rados
Cluster.

It is published under the terms of the LGPLv3 license:
  http://www.gnu.org/licenses/gpl-3.0.html


======
Usage
======

Here is a quick example of how to use RadosFs (it might also be a good idea to
take a look at the unit tests for further examples):

  #include <libradosfs.h>

  int ret;

  // Initialize RadosFs
  radosfs::RadosFs radosFs;
  ret = radosFs.init("someusername", "/path/to/conf/ceph.conf");

  if (ret != 0)
    return ret;

  // Add a pool
  radosFs.addPool("root-pool", "/");

  // Create a directory for a user with UID and GID = 1000
  radosfs::RadosFsDir dir(&radosFs, "/userdir");
  ret = dir.create(-1, false, 1000, 1000);

  if (ret != 0)
    return ret;

  // Change the current UID and GID to the user mentioned above
  // (further operations will be done under these ids)
  radosFs.setIds(1000, 1000);

  // Create a file as user 1000
  radofs::RadosFsFile file(&radosFs,
                           "/userdir/myfile",
                           radofs::RadosFsFile::MODE_WRITE);
  ret = file.create();

  if (ret != 0)
    return ret;


======
Tools
======

RadosFs comes with a radosfsck tool for checking the filesystem for issues
and correct them.

Here is how to use it:

  $ radosfsck --conf=PATH_TO_CLUSTER_CONF pool-name

  Run the check in the cluster configured by PATH_TO_CLUSTER_CONF and the pool
  indicated by "pool-name" which is automatically mapped to the root (/) as
  no path prefix was indicated.


  $ radosfsck --conf=PATH_TO_CLUSTER_CONF root-pool / test-pool /test/

  More than one pool can be configured and mapped to a certain prefix. As shown
  above, the pool named root-pool is mapped to the root prefix (/) and the one
  named test-pool is mapped to the /test/ prefix.


  $ radosfsck --fix --conf=PATH_TO_CLUSTER_CONF root-pool

  The fix option (--fix or -f) will try to correct the issues found. The current
  approach to that is:

    * if a directory doesn't exist anymore, create it;
    * if a file doesn't exist anymore, deindex it;
    * if a file or directory exists but is not indexed, do index it.


  $ radosfsck --fix --dry --conf=PATH_TO_CLUSTER_CONF root-pool

  Sometimes it might be useful to see what the fix operation would do without
  running it. That can be accomplished by using the dry run (--dry or -n) option
  together with the run one.


  $ radosfsck --verbose --conf=PATH_TO_CLUSTER_CONF root-pool

  Using the --verbose option (or -v) will show all the issues found and not only
  a summary. If used together with the fix option, it will show what was fixed
  and how. If the dry run option is also used, it will show what would be done
  for each fix attempt.
